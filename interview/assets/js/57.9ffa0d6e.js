(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{372:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"angular"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular"}},[t._v("#")]),t._v(" Angular")]),t._v(" "),s("h4",{attrs:{id:"mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" mvvm")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://thumbsnap.com/i/VeSX9sNM.png?0804",alt:""}})]),t._v(" "),s("p",[t._v("默认继承自父scope\nscope=false：子与父共享scope\nscope=true：继承父级，创建了新的作用域，子不会影响父\n@通过dom属性（字符串）来绑定scope\n{}创建隔离作用域，不会继承父作用域，需要自己指定传递的属性\n：\n@单项绑定\n=双向绑定\n&绑定函数")]),t._v(" "),s("p",[t._v("脏检查：ui事件、ajax请求、timeout延迟事件会触发脏检查。\n每一个绑到ui的数据都会有一个$watch对象（记录上一个值），存入watchList\n执行apply函数会触发一轮脏检查$digest，\n$digest会调起每一个$watch对象检查值是否一致，一轮循环后继续循环，直到所有值都是新的")])])}),[],!1,null,null,null);a.default=e.exports}}]);