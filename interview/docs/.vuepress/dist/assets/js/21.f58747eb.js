(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{471:function(v,_,t){"use strict";t.r(_);var a=t(65),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[v._v("#")]),v._v(" Nginx")]),v._v(" "),t("h3",{attrs:{id:"正向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正向代理"}},[v._v("#")]),v._v(" 正向代理")]),v._v(" "),t("p",[v._v("位于客户端和目标服务器之间的服务器(代理服务器)，为了从目标服务器取得内容，客户端向代理服务器发送一个请求并指定目标，然后代理服务器向目标服务器转交请求并将获得的内容返回给客户端。")]),v._v(" "),t("p",[v._v("科学上网就是典型的正向代理")]),v._v(" "),t("ul",[t("li",[v._v("客户端无法直接访问目标服务器")]),v._v(" "),t("li",[v._v("代理服务器帮客户端请求目标服务器，并返回给客户端")]),v._v(" "),t("li",[v._v("对于目标服务器来说，它不知道真正的客户端是谁")])]),v._v(" "),t("p",[v._v("以租房子为例，租客是客户端，他联系不了房东，只能通过中介完成一系列租房、开证明之类的操作。对于房东而言，他并不知道租房子的人是谁，中介让他干啥他就干了。")]),v._v(" "),t("h3",{attrs:{id:"反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[v._v("#")]),v._v(" 反向代理")]),v._v(" "),t("p",[v._v("指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。")]),v._v(" "),t("p",[v._v("我们以为我们接触的是房东，其实有时候也有可能并非房主本人，有可能是他的亲戚、朋友，甚至是二房东。但是我们并不知道和我们沟通的并不是真正的房东。这种帮助真正的房主租房的二房东其实就是反向代理服务器。这个过程就是反向代理。")]),v._v(" "),t("p",[v._v("我们在 Web 开发中用到的负载均衡服务器（二房东），客户端（租客）发送请求到负载均衡服务器（二房东）上，负载均衡服务器（二房东）再把请求转发给一台真正的服务器（房东）来执行，再把执行结果返回给客户端（租客）。")]),v._v(" "),t("p",[v._v("反向代理，其实是“代理服务器”代理了“目标服务器”，去和“客户端”进行交互。")]),v._v(" "),t("ul",[t("li",[v._v("正向代理其实是客户端的代理，帮助客户端访问其无法访问的服务器资源。反向代理则是服务器的代理，帮助服务器做负载均衡，安全防护等。")]),v._v(" "),t("li",[v._v("正向代理一般是客户端架设的，比如在自己的机器上安装一个代理软件。而反向代理一般是服务器架设的，比如在自己的机器集群中部署一个反向代理服务器。")]),v._v(" "),t("li",[v._v("正向代理中，服务器不知道真正的客户端到底是谁，以为访问自己的就是真实的客户端。而在反向代理中，客户端不知道真正的服务器是谁，以为自己访问的就是真实的客户端。")]),v._v(" "),t("li",[v._v("正向代理和反向代理的作用和目的不同。正向代理主要是用来解决访问限制问题。而反向代理则是提供负载均衡、安全防护等作用。二者均能提高访问速度。")])]),v._v(" "),t("h3",{attrs:{id:"负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[v._v("#")]),v._v(" 负载均衡")]),v._v(" "),t("p",[v._v("负载均衡，是一种计算机技术，用来在多个计算机（计算机集群）、网络连接、CPU、磁盘驱动器或其他资源中分配负载，以达到最优化资源使用、最大化吞吐率、最小化响应时间、同时避免过载的目的。")]),v._v(" "),t("p",[v._v("而当用户集中访问网站的时候，如果没有任何机制来疏导用户的话，完全随机或者就近原则的话，那么就会导致某些服务器的流量很大，而另外一个服务器的 qps 很小。这不仅严重的浪费了资源，而且还会导致拉长用户访问网站的 RT（响应时间，response time），影响用户的体验。更严重的可能直接拖垮那些流量大的服务器。")]),v._v(" "),t("p",[v._v("以日常生活为例，无论是买票，还是排队入场，这些场所一般都会设置多个服务点或者入口的（负载均衡）。但是，如果没有人引导的话，大多数情况下，最近的入口会挤满人。而哪些距离较远的服务点或者入口就宽松很多。")]),v._v(" "),t("p",[v._v("这时候，就需要一个协调者，来均衡的分配这些用户的请求，可以让用户的可以均匀的分派到不同的服务器上。")]),v._v(" "),t("p",[v._v("将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上进行执行。是解决高性能，单点故障（高可用），扩展性（水平伸缩）的终极解决方案。")]),v._v(" "),t("p",[v._v("Nginx 是在第七层（应用层）做负载均衡的。")])])}),[],!1,null,null,null);_.default=e.exports}}]);