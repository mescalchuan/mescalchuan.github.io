(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{238:function(e,s,t){"use strict";t.r(s);var a=t(0),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#入门"}},[e._v("#")]),e._v(" 入门")]),e._v(" "),t("h4",{attrs:{id:"loader"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[e._v("#")]),e._v(" Loader")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[e._v("use"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'style-loader'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'css-loader'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Loader的执行顺序是从后往前的，因此，先用css-loader读取css文件，再由style-loader将css内容注入到script标签里。每个Loader都可以以url的形式传入参数"),t("code",[e._v("use: ['css-loader?minimize']")]),e._v("。\n\ufeff\nstyle-loader的工作原理大致就是将css内容用js里的字符串存储起来，在网页执行JS时通过DOM操作动态向head标签中插入style标签。")]),e._v(" "),t("h4",{attrs:{id:"devserver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devserver"}},[e._v("#")]),e._v(" DevServer")]),e._v(" "),t("p",[e._v("DevServer会将webpack构建出的文件保存在内存中，访问时必须通过http访问。")]),e._v(" "),t("h4",{attrs:{id:"核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[e._v("#")]),e._v(" 核心概念")]),e._v(" "),t("ul",[t("li",[e._v("Entry：入口，构建时的第一步将从入口开始")]),e._v(" "),t("li",[e._v("Module：模块，webpack一切皆模块，一个模块对应一个文件")]),e._v(" "),t("li",[e._v("Chunk：代码块，由多个模块组成，用于代码合并与分割")]),e._v(" "),t("li",[e._v("Loader：模块转换器，将原内容转换成新内容")]),e._v(" "),t("li",[e._v("Plugin：扩展插件，用于改变构建结果")]),e._v(" "),t("li",[e._v("Output：输出结果\n\ufeff\nWebpack在启动后会从entry里配置的module开始递归解析entry所依赖的所有module。每找到一个module就会根据配置里的loader去转换它。对该module解析后，再去解析它所依赖的module以此类推。这些模块会以entry为单位进行分组，比如，一个entry及其所以依赖的所有module就是一组，也就是一个chunk。最后，所有的chunk被转换成文件输出。在整个流程中，webpack会在恰当的时机执行plugin（时机取决于每个plugin）。")])])])}),[],!1,null,null,null);s.default=r.exports}}]);